import json
from sys import argv as carg
from scripts.rgen import gen
import scripts.erasefile as erf
import os

def main():

    USER_LIST = open('config\\active_list', 'r+').read()
    LIST_REGISTER = open('userlists\\list-register.json', 'r+')

    # Ensure correct number of arguments
    if carg[1]=="help":
        print(open('man\\usage.txt', 'r+').read())
        return
    # USER command
    elif carg[1]=="user":
        # ADD action 
        if carg[2]=="add":
            u_name = carg[3]
            u_email = carg[4]
            try:
                with open(f'userlists\\{USER_LIST}', 'r+') as user_data_file:
                    # Load existing user data
                    try:
                        user_data = json.load(user_data_file)
                    except json.JSONDecodeError:
                        print("user.json file seems corrupted!")
                    # Generate new user ID and add user data
                    u_id = gen()
                    user_data[u_id] = {"name": u_name, "email": u_email}
                    # Erase the file and write updated data
                    erf.erase(user_data_file)
                    json.dump(user_data, user_data_file, indent=4)
                    print(f"User {u_name} created with ID {u_id}.")
            except Exception as e:
                print(f"User can't be added: {e}")
        # REMOVE action 
        elif carg[2]=="remove":
            u_ID = carg[3]
            u_name = json.load(open(f'userlists\\{USER_LIST}', 'r+'))[u_ID]["name"]
            try:
                with open(f'userlists\\{USER_LIST}', 'r+') as user_data_file:
                    # Load existing user data
                    try:
                        user_data = json.load(user_data_file)
                    except json.JSONDecodeError:
                        print("user.json file seems corrupted!")
                    # Remove user and user data
                    del user_data[u_ID]
                    # Erase the file and write updated data
                    erf.erase(user_data_file)
                    json.dump(user_data, user_data_file, indent=4)
                    print(f"User {u_name} with ID {u_ID} has been deleted.")
            except Exception as e:
                print(f"User can't be removed: {e}")
    # LIST command
    elif carg[1]=="list":
        if carg[2]=="add":
            "Adds a new Userlist"
            list_file_name = carg[3]
            list_id = gen()
            list_register_temp = json.load(LIST_REGISTER)
            list_register_temp[list_id] =  {"name": list_file_name, "file": list_file_name+'.json'}
            erf.erase(LIST_REGISTER)
            json.dump(list_register_temp, LIST_REGISTER, indent=4)
            open(f"userlists\\{list_file_name+'.json'}", 'w+').write("{}")
            print(f"Userlist {list_file_name} with ID {list_id} has been created.")
        elif carg[2]=="remove":
            "Removes an existing Userlist"
            list_id = carg[3]
            list_register_temp = json.load(LIST_REGISTER)
            list_name = list_register_temp[list_id]["name"]
            os.remove(f'userlists\\{list_register_temp[list_id]["file"]}')
            del list_register_temp[list_id]
            erf.erase(LIST_REGISTER)
            json.dump(list_register_temp, LIST_REGISTER, indent=4)
            print(f"Userlist {list_name} deleted.")
        elif carg[2]=="select":
            "Selects a userlist as activelist"
            list_id = carg[3]
            with open('config\\active_list', 'w+') as active_list:
                erf.erase(active_list)
                list_register_temp = json.load(LIST_REGISTER)
                active_list.write(f'{list_register_temp[list_id]["file"]}')
                print(f"Userlist {list_register_temp[list_id]["name"]} selected as activelist")
        else:
            print("USERLIST related functions.")
    # Error in arguments
    else:
        print("Invalid command or action.")

# LOOP
if __name__ == "__main__":
    main()
